---
import MergedResultsNotice from '../components/Rankings/MergedResultsNotice.astro'
import NoLinksFound from '../components/Rankings/NoLinksFound.astro'
import TopCats from '../components/Rankings/TopCats.astro'
import ScrollUp from '../components/ScrollUp.astro'
import SearchFilters from '../components/SearchFilters/Filters'
import LocalStorageLoader from '../components/SearchFilters/LocalStorageLoader.astro'
import { CATS_ENDPOINT } from '../constants'
import WithFooter from '../layouts/WithFooter.astro'
import {
	has_merged_cats_property,
	Periods,
	type CatCount,
	type MorePageCatCountsWithMergedCats,
	type Period,
} from '../types'
import fetch_with_handle_redirect from '../util/fetch_with_handle_redirect'

// Params
const params = Astro.url.searchParams
params.set('more', 'true')

let cats = ''
if (params.get('cats')) {
	cats = params.get('cats') ?? ''
}
let neutered_cats = ''
if (params.get('neutered')) {
	neutered_cats = params.get('neutered') ?? ''
}
let summary_contains = ''
if (params.get('summary_contains')) {
	summary_contains = params.get('summary_contains') ?? ''
}
let url_contains = ''
if (params.get('url_contains')) {
	url_contains = params.get('url_contains') ?? ''
}
let url_lacks = ''
if (params.get('url_lacks')) {
	url_lacks = params.get('url_lacks') ?? ''
}
let period = ''
if (params.get('period') && (Periods as readonly string[]).includes(params.get('period') as Period)) {
	period = params.get('period') as Period
}
const more_cats_url = params.size ? `${CATS_ENDPOINT}?${params.toString()}` : CATS_ENDPOINT
const url_params = {
	Cats: cats,
	NeuteredCats: neutered_cats,
	Period: period ? (period as Period) : undefined,
	SummaryContains: summary_contains,
	URLContains: url_contains,
	URLLacks: url_lacks,
	// SortBy/IncludeNSFW/Page not relevant here since we are
	// only returning cat counts, not links
}

// Cat counts
const counts_resp = await fetch_with_handle_redirect(more_cats_url)
if (!counts_resp.Response || counts_resp.RedirectTo) {
	return Astro.redirect(counts_resp.RedirectTo)
}
const counts: MorePageCatCountsWithMergedCats | CatCount[] = await counts_resp.Response.json()
let top_cats: CatCount[] = []
let merged_cats: string[] | undefined = undefined
if (has_merged_cats_property(counts)) {
	top_cats = counts.Counts
	merged_cats = counts.MergedCats
} else {
	top_cats = counts
}
---

<WithFooter Title='More Cats'>
	<LocalStorageLoader />
	<main>
		<SearchFilters
			client:load
			InitialCats={cats.length ? cats.split(',') : []}
			InitialNeuteredCats={neutered_cats.length ? neutered_cats.split(',') : []}
			InitialPeriod={(period as Period) ?? 'all'}
			InitialSummaryContains={summary_contains}
			InitialURLContains={url_contains}
			InitialURLLacks={url_lacks}
			Endpoint='/more'
		/>

		{
			top_cats?.length ? (
				<section>
					{merged_cats && merged_cats.length ? <MergedResultsNotice MergedCats={merged_cats} /> : null}
					<TopCats TopCats={top_cats} URLParams={url_params} More />
				</section>
			) : cats ? (
				<p>No further subcats.</p>
			) : (
				<NoLinksFound />
			)
		}
		<ScrollUp />
	</main>
</WithFooter>
