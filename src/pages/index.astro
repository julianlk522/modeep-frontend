---
import Rankings from '../components/Rankings/Rankings.astro'
import ScrollUp from '../components/ScrollUp.astro'
import SearchCats from '../components/SearchFilters/Cats'
import { CATS_ENDPOINT, CONTRIBUTORS_ENDPOINT, LINKS_ENDPOINT, TOTALS_ENDPOINT } from '../constants'
import WithFooter from '../layouts/WithFooter.astro'
import type { CatCount, Contributor, PaginatedLinks, Totals } from '../types'
import fetch_with_handle_redirect from '../util/fetch_with_handle_redirect'

// Auth
const token = Astro.cookies.get('token')?.value
const user = Astro.cookies.get('user')?.value

// Get top cats
const top_cats_resp = await (token
	? fetch_with_handle_redirect(CATS_ENDPOINT, {
			headers: { Authorization: `Bearer ${token}` },
		})
	: fetch_with_handle_redirect(CATS_ENDPOINT))
if (!top_cats_resp.Response || top_cats_resp.RedirectTo) {
	return Astro.redirect(top_cats_resp.RedirectTo)
}
const top_cats: CatCount[] = await top_cats_resp.Response?.json()

// Get top contributors
const top_contributors_resp = await fetch_with_handle_redirect(CONTRIBUTORS_ENDPOINT)
if (!top_contributors_resp.Response || top_contributors_resp.RedirectTo) {
	return Astro.redirect(top_contributors_resp.RedirectTo)
}
const top_contributors: Contributor[] = await top_contributors_resp.Response.json()

// Get top links
const DEFAULT_PERIOD = 'week'
const links_url = LINKS_ENDPOINT + `?period=${DEFAULT_PERIOD}`
const get_links_resp = await (token
	? fetch_with_handle_redirect(links_url, {
			headers: { Authorization: `Bearer ${token}` },
		})
	: fetch_with_handle_redirect(links_url))
if (!get_links_resp.Response || get_links_resp.RedirectTo) {
	return Astro.redirect(get_links_resp.RedirectTo)
}
const links_data: PaginatedLinks = await get_links_resp.Response.json()
const links = links_data.Links

// Get totals
const totals_resp = await fetch_with_handle_redirect(TOTALS_ENDPOINT)
if (!totals_resp.Response || totals_resp.RedirectTo) {
	return Astro.redirect(totals_resp.RedirectTo)
}
const totals: Totals = await totals_resp.Response.json()
---

<WithFooter Title='Modeep'>
	<main>
		<h1>Welcome Home, Good Hunter</h1>
		<p id='subtitle'>What is it you desire?</p>

		<SearchCats client:load SelectedCats={[]} SetSelectedCats={() => {}} IsHomePage />

		<Rankings
			Links={links}
			URLParams={{ Page: 1 }}
			Pages={links_data.Pages}
			TopCats={top_cats}
			TopContributors={top_contributors}
			Token={token}
			User={user}
			IsHomePage
		/>

		<div id='totals'>
			<div class='row'>
				<div class='total'>
					<span class='number'>{totals.Links}</span>
					<span class='category'>Links</span>
				</div>
				<span>•</span>

				<div class='total'>
					<span class='number'>{totals.Clicks}</span>
					<span class='category'>Clicks</span>
				</div>
				<span>•</span>

				<div class='total'>
					<span class='number'>{totals.LinksStarred}</span>
					<span class='category'>Links Starred</span>
				</div>
			</div>

			<div class='row'>
				<div class='total'>
					<span class='number'>{totals.Contributors}</span>
					<span class='category'>Treasure Hunters</span>
				</div>
				<span>•</span>

				<div class='total'>
					<span class='number'>{totals.Tags}</span>
					<span class='category'>Tags</span>
				</div>
				<span>•</span>

				<div class='total'>
					<span class='number'>{totals.Summaries}</span>
					<span class='category'>Summaries</span>
				</div>
			</div>
		</div>

		<ScrollUp />
	</main>
</WithFooter>

<style>
	h1 {
		margin-bottom: 0.5rem;
	}

	p#subtitle {
		background: hsla(180, 33%, 82%, 0.05);
		padding: 3px;
		margin-bottom: 0.5rem;
		text-align: center;
	}

	#totals {
		padding: 1rem 0;
		font-size: 0.9rem;
		text-align: center;
		border-bottom: var(--border-light);

		div.row {
			margin-top: 0;
			display: flex;
			justify-content: center;
			gap: 2px;

			div.total {
				display: inline;

				span.number {
					font-weight: bold;
					color: var(--sky);
				}

				span.category {
					opacity: 0.85;
					color: var(--text);
				}
			}
		}
	}

	@media (min-width: 400px) {
		#totals div.row {
			gap: 5px;
		}
	}

	@media (min-width: 680px) {
		#totals {
			font-size: 1rem;

			div.row {
				justify-content: flex-end;
				gap: 8px;
			}
		}
	}
</style>
